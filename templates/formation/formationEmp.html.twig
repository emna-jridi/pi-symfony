{% extends 'base1.html.twig' %}

{% block title %}Formations pour l'Employé{% endblock %}

{% block body %}
<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h4 class="card-title">Formations Disponibles</h4>
            </div>

            <!-- Search and Filter Section -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="input-group rounded-pill shadow-sm">
                        <span class="input-group-text bg-primary text-white rounded-start-pill"><i class="bi bi-search"></i></span>
                        <input type="text" id="searchKeyword" class="form-control rounded-end-pill" placeholder="Rechercher par titre ou thème..." 
                               aria-label="Search">
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row g-2">
                        <div class="col-md-6">
                            <div class="input-group rounded-pill shadow-sm">
                                <span class="input-group-text bg-info text-white rounded-start-pill"><i class="bi bi-tags"></i></span>
                                <select id="themeFilter" class="form-select rounded-end-pill">
                                    <option value="">Tous les thèmes</option>
                                    <option value="dev">Développement</option>
                                    <option value="commercial">Commercial</option>
                                    <option value="marketing">Marketing</option>
                                    <option value="design">Design</option>
                                    <option value="hr">Ressources Humaines</option>
                                    <option value="project_management">Gestion de projet</option>
                                    <option value="finance">Finance</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="input-group rounded-pill shadow-sm">
                                <span class="input-group-text bg-warning text-dark rounded-start-pill"><i class="bi bi-graph-up"></i></span>
                                <select id="niveauFilter" class="form-select rounded-end-pill">
                                    <option value="">Tous les niveaux</option>
                                    <option value="debutant">Débutant</option>
                                    <option value="intermediaire">Intermédiaire</option>
                                    <option value="avance">Avancé</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="formationsContainer">
                {% if formations|length > 0 %}
                <div class="list-group">
                    {% for formation in formations %}
                    <div class="list-group-item list-group-item-action formation-item mb-3 border rounded-3 shadow-sm">
                        <div class="d-flex w-100 justify-content-between align-items-center">
                            <h5 class="mb-2 text-primary">{{ formation.nomFormation }}</h5>
                            <div>
                                <span class="badge bg-info">{{ formation.themeFormation }}</span>
                                <span class="badge bg-secondary ms-2">{{ formation.niveauDifficulte }}</span>
                            </div>
                        </div>
                        <p class="mb-2">
                            {% if formation.description|length > 120 %}
                                {{ formation.description|slice(0, 120)|raw }}...
                            {% else %}
                                {{ formation.description|raw }}
                            {% endif %}
                        </p>
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="text-muted">
                                <i class="ti-calendar me-2"></i>{{ formation.date ? formation.date|date('d/m/Y') : 'Non planifiée' }}
                                <span class="mx-3">|</span>
                                <i class="ti-timer me-2"></i>{{ formation.duree }} jour{% if formation.duree > 1 %}s{% endif %}
                            </div>
                            <a href="{{ formation.lienFormation }}" class="btn btn-outline-primary btn-sm rounded-pill" target="_blank">
                                Accéder à la formation
                            </a>
                        </div>
                    </div>
                    {% endfor %}
                </div>

                {# Pagination controls #}
                <div class="d-flex justify-content-center mt-4">
                    <nav aria-label="Page navigation">
                        <ul class="pagination" id="pagination">
                            {% if currentPage > 1 %}
                                <li class="page-item">
                                    <a class="page-link" href="#" data-page="{{ currentPage - 1 }}">Précédent</a>
                                </li>
                            {% endif %}
                            
                            {% for i in 1..lastPage %}
                                <li class="page-item {{ i == currentPage ? 'active' : '' }}">
                                    <a class="page-link" href="#" data-page="{{ i }}">{{ i }}</a>
                                </li>
                            {% endfor %}
                            
                            {% if currentPage < lastPage %}
                                <li class="page-item">
                                    <a class="page-link" href="#" data-page="{{ currentPage + 1 }}">Suivant</a>
                                </li>
                            {% endif %}
                        </ul>
                    </nav>
                </div>
                {% else %}
                <div class="alert alert-info text-center">
                    <i class="ti-info-alt mr-2"></i> Aucune formation disponible pour le moment.
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchKeyword');
    const themeFilter = document.getElementById('themeFilter');
    const niveauFilter = document.getElementById('niveauFilter');
    const formationsContainer = document.getElementById('formationsContainer');
    let typingTimer;

    function updateList() {
        const keyword = searchInput.value;
        const theme = themeFilter.value;
        const niveau = niveauFilter.value;
        const currentPage = document.getElementById('pagination')?.dataset.currentPage || 1;
        
        const params = new URLSearchParams({
            keyword: keyword,
            theme: theme,
            niveau: niveau,
            page: currentPage
        });

        fetch(`{{ path("formationEmp") }}?${params.toString()}`, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.formations.length === 0) {
                formationsContainer.innerHTML = `
                    <div class="alert alert-info text-center">
                        <i class="ti-info-alt mr-2"></i> Aucune formation trouvée avec ces critères.
                    </div>`;
                return;
            }

            const listGroup = document.createElement('div');
            listGroup.className = 'list-group';

            data.formations.forEach(formation => {
                const item = document.createElement('div');
                item.className = 'list-group-item list-group-item-action formation-item mb-3 border rounded-3 shadow-sm';
                item.innerHTML = `
                    <div class="d-flex w-100 justify-content-between align-items-center">
                        <h5 class="mb-2 text-primary">${formation.nomFormation}</h5>
                        <div>
                            <span class="badge bg-info">${formation.themeFormation}</span>
                            <span class="badge bg-secondary ms-2">${formation.niveauDifficulte}</span>
                        </div>
                    </div>
                    <p class="mb-2">
                        ${formation.description ? (formation.description.length > 120 ? 
                            formation.description.slice(0, 120) + '...' : 
                            formation.description) : ''}
                    </p>
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="text-muted">
                            <i class="ti-calendar me-2"></i>${formation.date || 'Non planifiée'}
                            <span class="mx-3">|</span>
                            <i class="ti-timer me-2"></i>${formation.duree} jour${formation.duree > 1 ? 's' : ''}
                        </div>
                        <a href="${formation.lienFormation}" class="btn btn-outline-primary btn-sm rounded-pill" target="_blank">
                            Accéder à la formation
                        </a>
                    </div>
                `;
                listGroup.appendChild(item);
            });

            // Update pagination
            const pagination = document.createElement('div');
            pagination.className = 'd-flex justify-content-center mt-4';
            pagination.innerHTML = `
                <nav aria-label="Page navigation">
                    <ul class="pagination" id="pagination" data-current-page="${data.pagination.currentPage}">
                        ${data.pagination.currentPage > 1 ? `
                            <li class="page-item">
                                <a class="page-link" href="#" data-page="${data.pagination.currentPage - 1}">Précédent</a>
                            </li>
                        ` : ''}
                        
                        ${Array.from({length: data.pagination.lastPage}, (_, i) => i + 1)
                            .map(page => `
                                <li class="page-item ${page === data.pagination.currentPage ? 'active' : ''}">
                                    <a class="page-link" href="#" data-page="${page}">${page}</a>
                                </li>
                            `).join('')}
                        
                        ${data.pagination.currentPage < data.pagination.lastPage ? `
                            <li class="page-item">
                                <a class="page-link" href="#" data-page="${data.pagination.currentPage + 1}">Suivant</a>
                            </li>
                        ` : ''}
                    </ul>
                </nav>
            `;

            formationsContainer.innerHTML = '';
            formationsContainer.appendChild(listGroup);
            formationsContainer.appendChild(pagination);

            // Add click handlers for pagination
            document.querySelectorAll('#pagination .page-link').forEach(link => {
                link.addEventListener('click', (e) => {
                    e.preventDefault();
                    const page = e.target.dataset.page;
                    document.getElementById('pagination').dataset.currentPage = page;
                    updateList();
                });
            });
        })
        .catch(error => {
            console.error('Erreur:', error);
            formationsContainer.innerHTML = `
                <div class="alert alert-danger text-center">
                    <i class="ti-alert mr-2"></i> Une erreur s'est produite lors de la recherche.
                </div>`;
        });
    }

    searchInput.addEventListener('input', function() {
        clearTimeout(typingTimer);
        typingTimer = setTimeout(updateList, 300);
    });

    themeFilter.addEventListener('change', updateList);
    niveauFilter.addEventListener('change', updateList);
});
</script>

<style>
.formation-item {
    transition: all 0.3s ease;
}
.formation-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1) !important;
}
.badge {
    font-size: 0.85rem;
    padding: 0.4em 0.8em;
}
</style>
{% endblock %}

{% endblock %}
